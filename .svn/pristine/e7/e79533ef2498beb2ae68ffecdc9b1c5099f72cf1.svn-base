//
//  ColorPickerViewController.m
//  CloudSona2
//
//  Created by Kamil Zaborszczyk on 5/9/12.
//  Copyright (c) 2012 __MyCompanyName__. All rights reserved.
//

#import "ColorPickerViewController.h"

@implementation ColorPickerViewController

@synthesize initialPos;
@synthesize cpvcDelegate;


@synthesize cpPanGestureRecognizer;


-(IBAction)startedToPan:(UIPanGestureRecognizer *) recognizer{

    //[recognizer.view addGestureRecognizer:recognizer];
//    UIGestureRecognizer *gestureRecognizer = [[UIGestureRecognizer alloc] initWithTarget:self action:@selector(startedToPan:)];
    
    [self.view bringSubviewToFront:recognizer.view];
    
    if (recognizer.state == UIGestureRecognizerStateBegan)
        initialPos = recognizer.view.center;
 
    CGPoint translation = [recognizer translationInView:self.view];
    
    recognizer.view.center = CGPointMake(recognizer.view.center.x + translation.x, recognizer.view.center.y + translation.y);
    [recognizer setTranslation:CGPointMake(0, 0) inView:self.view];
    
    if (recognizer.state == UIGestureRecognizerStateEnded)
        [self onPanStop:recognizer:initialPos];
}

-(IBAction)onPanStop:(UIPanGestureRecognizer *)stopRecognizer: (CGPoint) initPos {
    [cpvcDelegate colorDroppedAtPos: [self.view 
                                      convertPoint:stopRecognizer.view.center 
                                      toView:self.view.superview]
                                   : stopRecognizer.view.backgroundColor];
    if(sliderButton)
        
        [sliderButton.view setBackgroundColor:[UIColor redColor]];
     
    stopRecognizer.view.center = initPos;

}


- (id)initWithNibName:(NSString *)nibNameOrNil bundle:(NSBundle *)nibBundleOrNil
{
    self = [super initWithNibName:nibNameOrNil bundle:nibBundleOrNil];
    if (self) {
        
        colorsCollection = [[NSMutableArray alloc] init];
        colorPickerButtons = [[NSMutableArray alloc] init];
        gestureCollection = [[NSMutableArray alloc] init];
        
        sliderButton = [[SliderButton alloc] initWithNibName:@"SliderButton" bundle:nil];
        sliderButton.sliderButtonDelegate = self;
   
        /*
        UIColor *uiColorRED = [UIColor colorWithRed:1.0 green:0.0 blue:0.0 alpha:1.0];
        UIColor *uiColorGREEN = [UIColor colorWithRed:0.0 green:1.0 blue:0.0 alpha:1.0];
        UIColor *uiColorBLUE = [UIColor colorWithRed:0.0 green:0.0 blue:1.0 alpha:1.0];
        UIColor *uiColorYELLOW = [UIColor colorWithRed:1.0 green:1.0 blue:0.0 alpha:1.0];
        UIColor *uiColorCYAN = [UIColor colorWithRed:0.0 green:1.0 blue:1.0 alpha:1.0];
        UIColor *uiColorMAGENTA = [UIColor colorWithRed:1.0 green:0.0 blue:1.0 alpha:1.0];
        UIColor *uiColorWHITE = [UIColor colorWithRed:1.0 green:1.0 blue:1.0 alpha:1.0];
        UIColor *uiColorBLACK = [UIColor colorWithRed:0.0 green:0.0 blue:0.0 alpha:1.0];
        UIColor *uiColorPINK = [UIColor colorWithRed:1.0 green:0.5 blue:0.5 alpha:1.0];
        
        
        [colorsCollection addObject:uiColorRED];
        [colorsCollection addObject:uiColorGREEN];
        [colorsCollection addObject:uiColorBLUE];
        [colorsCollection addObject:uiColorYELLOW];
        [colorsCollection addObject:uiColorCYAN];
        [colorsCollection addObject:uiColorMAGENTA];
        [colorsCollection addObject:uiColorWHITE];
        [colorsCollection addObject:uiColorBLACK];
        [colorsCollection addObject:uiColorPINK];
         */
        
        UIColor *uiColorBLACK = [UIColor colorWithRed:0.0 green:0.0 blue:0.0 alpha:1.0];
        UIColor *uiColorRED = [UIColor colorWithRed:1.0 green:0.0 blue:0.0 alpha:1.0];
        UIColor *uiColorORANGE = [UIColor colorWithRed:1.0 green:0.5 blue:0.0 alpha:1.0];
        UIColor *uiColorYELLOW = [UIColor colorWithRed:1.0 green:1.0 blue:0.0 alpha:1.0];
        UIColor *uiColorCHARTUESE = [UIColor colorWithRed:0.5 green:1.0 blue:0.0 alpha:1.0];
        UIColor *uiColorGREEN = [UIColor colorWithRed:0.0 green:1.0 blue:0.0 alpha:1.0];
        UIColor *uiColorSPRINGGREEN = [UIColor colorWithRed:0.0 green:1.0 blue:0.5 alpha:1.0];
        UIColor *uiColorCYAN = [UIColor colorWithRed:0.0 green:1.0 blue:1.0 alpha:1.0];
        UIColor *uiColorAZURE = [UIColor colorWithRed:0.0 green:0.5 blue:1.0 alpha:1.0];
        UIColor *uiColorBLUE = [UIColor colorWithRed:0.0 green:0.0 blue:1.0 alpha:1.0];
        UIColor *uiColorVIOLET = [UIColor colorWithRed:0.5 green:0.0 blue:1.0 alpha:1.0];
        UIColor *uiColorMAGENTA = [UIColor colorWithRed:1.0 green:0.0 blue:1.0 alpha:1.0];
        UIColor *uiColorROSE = [UIColor colorWithRed:1.0 green:0.0 blue:0.5 alpha:1.0];
        UIColor *uiColorWHITE = [UIColor colorWithRed:1.0 green:1.0 blue:1.0 alpha:1.0];
        UIColor *uiColorPINK = [UIColor colorWithRed:1.0 green:0.5 blue:0.5 alpha:1.0];
        
        
        
        [colorsCollection addObject:uiColorBLACK];
        [colorsCollection addObject:uiColorRED];
        [colorsCollection addObject:uiColorORANGE];
        [colorsCollection addObject:uiColorYELLOW];
        [colorsCollection addObject:uiColorCHARTUESE];
        [colorsCollection addObject:uiColorGREEN];
        [colorsCollection addObject:uiColorSPRINGGREEN];
        [colorsCollection addObject:uiColorCYAN];
        [colorsCollection addObject:uiColorAZURE];
        [colorsCollection addObject:uiColorBLUE];
        [colorsCollection addObject:uiColorVIOLET];
        [colorsCollection addObject:uiColorMAGENTA];
        [colorsCollection addObject:uiColorROSE];
        [colorsCollection addObject:uiColorPINK];
        [colorsCollection addObject:uiColorWHITE];
        
    }
    return self;
}

- (void)didReceiveMemoryWarning
{
    // Releases the view if it doesn't have a superview.
    [super didReceiveMemoryWarning];
    
    // Release any cached data, images, etc that aren't in use.
}

#pragma mark - View lifecycle

- (void)viewDidLoad
{
    [super viewDidLoad];
    // Do any additional setup after loading the view from its nib.

    //Initial button position
    float posX=40.0;
    float posY=15.0;
    NSInteger btnCount=14;
    
    //Factor which is used to divide butons 
    float width= 68.0;
    
    // Generate buttons
    for (int i=1; i <= btnCount+1; i++){
        UIButton *tmpBtn = [[UIButton alloc] initWithFrame:
                            CGRectMake(posX, posY, 60.0,80.0)];
        tmpBtn.layer.cornerRadius = 5;
        tmpBtn.layer.borderColor = [UIColor darkGrayColor].CGColor;
        tmpBtn.layer.borderWidth = 3;
        
       
        [colorPickerButtons addObject:tmpBtn];
        
        //avoid last double counting
        if(i<btnCount)
            posX = posX+width;
    }
    
    
    //Configure buttons and add recognizer
    for(int i = 0; i < colorPickerButtons.count; i++) {
        [[colorPickerButtons objectAtIndex:i] 
         setBackgroundColor:[colorsCollection objectAtIndex:i]];
        [[colorPickerButtons objectAtIndex:i] setShowsTouchWhenHighlighted:YES];
        
        cpPanGestureRecognizer = [[UIPanGestureRecognizer alloc] initWithTarget:self action:@selector(startedToPan:)];
        
        [[colorPickerButtons objectAtIndex:i] addGestureRecognizer:cpPanGestureRecognizer];

        [self.view addSubview:((UIButton*)[colorPickerButtons objectAtIndex:i])];
        
        [cpPanGestureRecognizer release];
        
    }
}

- (void)viewDidUnload
{
    [self setCpPanGestureRecognizer:nil];
    [super viewDidUnload];
    // Release any retained subviews of the main view.
    // e.g. self.myOutlet = nil;
}

- (BOOL)shouldAutorotateToInterfaceOrientation:(UIInterfaceOrientation)interfaceOrientation
{
    // Return YES for supported orientations
	return YES;
}

- (void)dealloc {
    
    [cpvcDelegate release];
    [cpPanGestureRecognizer release];
    [super dealloc];
    }
                        
@end
